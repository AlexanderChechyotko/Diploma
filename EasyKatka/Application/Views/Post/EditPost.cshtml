@model Application.Models.PostModels.EditPostViewModel
@using (Html.BeginForm("EditPost", "Post", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "app-form" }))
{
    <div class="create-post-container">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "form-text-danger" })
        @Html.HiddenFor(m => m.Id)
        <div class="post-title form-group">
            @Html.TextBoxFor(m => m.Title, new { @class = "form-input", placeholder = "Название статьи" })
            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "form-text-danger" })
        </div>
        <div class="form-group">
            @if (ViewBag.Categories.Count != 0)
            {
                @Html.DropDownListFor(m => m.Category, new SelectList(ViewBag.Categories, "Id", "Name", Model.Category))
            }
        </div>
        <div class="post-desc form-group">
            @Html.LabelFor(m => m.ShortDescription, "Короткое описание статьи")
            @Html.TextAreaFor(m => m.ShortDescription, new { @id = "shortDescEditor" })
            @Html.ValidationMessageFor(m => m.ShortDescription, "", new { @class = "form-text-danger" })
            <script>
                CKEDITOR.replace("shortDescEditor");
            </script>
        </div>
        <div class="post-desc form-group">
            @Html.LabelFor(m => m.Description, "Полная статья")
            @Html.TextAreaFor(m => m.Description, new { @id = "bodyEditor" })
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "form-text-danger" })
            <script>
                CKEDITOR.replace("bodyEditor");
            </script>
        </div>
        <div class="post-button form-group">
            <input type="submit" class="form-submit" value="Отправить" />
        </div>
    </div>
}
